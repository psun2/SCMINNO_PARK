package file;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

@WebServlet("/Upload") // 서버에서 받는 주소 Spring의 @RequestMapping
public class Upload extends HttpServlet {
	private static final long serialVersionUID = 1L;

    public Upload() {
        super();
        // TODO Auto-generated constructor stub
    }

    // get방식
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	// post방식
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String direction = this.getServletContext().getRealPath("/upload/"); // 서버내 실제 경로의 upload폴더를 지칭합니다.
		int fileMaxSize = 1024 * 1024 * 100; // 100MB
		String enCoding = "UTF-8";
		
		// 서버의 해당 디렉토리에 이미 파일 업로드가 끝난 상태(MultipartRequest 객체 생성시)
		MultipartRequest multipartRequest = 
				new MultipartRequest(request, direction, fileMaxSize, enCoding, new DefaultFileRenamePolicy());
	
		
	}

}
